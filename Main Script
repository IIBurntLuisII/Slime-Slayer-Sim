local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Slime Slaying Sim",
    LoadingTitle = "Burnt Hub",
    LoadingSubtitle = "By Damian",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil,
       FileName = "SaveFile"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink",
       RememberJoins = true
    },
    KeySystem = false, 
    KeySettings = {
       Title = "Slime Slayer Sim Key",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", 
       SaveKey = true, 
       GrabKeyFromSite = false, 
       Key = {"https://pastebin.com/dPxksJ8h"} 
    }
 })

 local MainTab = Window:CreateTab("Main", nil) 
 local AutoFarmTab = Window:CreateTab("Auto Farm", nil) 
 local PlayerTab = Window:CreateTab("Player", nil)
 local MainSection = MainTab:CreateSection("Main")
 local MainSection = AutoFarmTab:CreateSection("Auto Farm Slimes")
 local MainSection = PlayerTab:CreateSection("Walk Speed")

 Rayfield:Notify({
    Title = "You executed the script",
    Content = "Very good script maker",
    Duration = 5,
    Image = nil,
    Actions = {
       Ignore = {
          Name = "Okay!",
          Callback = function()
          print("The user tapped Okay!")
       end
    },
 },
 })

 local Button = MainTab:CreateButton({
    Name = "Auto Collect Shards",
    Callback = function()
        local args = {
            [1] = "Shard"
        }
        
        while true do
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("EnemyService"):WaitForChild("RF"):WaitForChild("CollectPickUp"):InvokeServer(unpack(args))
            wait(0.1)
        end       
    end,
 })
 
 local Dropdown = AutoFarmTab:CreateDropdown({
    Name = "Auto Farm",
    Options = {"BlueSlime","MegaSlime", "UltraRedSlime"},
    CurrentOption = {"UltraRedSlime"},
    MultipleOptions = false,
    Flag = "Auto Farm",
    Callback = function(Option)
local farmingEnabled = false

local function collectPickup(pickupType)
    local args = {
        [1] = pickupType
    }

    game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("EnemyService"):WaitForChild("RF"):WaitForChild("CollectPickUp"):InvokeServer(unpack(args))
end

local function teleportToMob(mob)
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = mob.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5)
        end
    end
end

local function hitMob(mob)
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid:MoveTo(mob.HumanoidRootPart.Position)
            wait(0.1)
            humanoid:MoveTo(character.HumanoidRootPart.Position)
        end
    end
end

local function autoFarmSlimes()
    while farmingEnabled do
        -- Find the nearest Blue Slime, Mega Slime, or Ultra Red Slime
        local nearestMob = nil
        local nearestDistance = math.huge
        for _, mob in ipairs(game.Workspace.Enemies:GetChildren()) do
            if mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") then
                local distance = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance < nearestDistance then
                    nearestMob = mob
                    nearestDistance = distance
                end
            end
        end

        -- If a mob was found, teleport to it and hit it
        if nearestMob then
            teleportToMob(nearestMob)
            hitMob(nearestMob)

            -- Collect the pickup
            if nearestMob.Name == "BlueSlime" then
                collectPickup("BlueSlime")
            elseif nearestMob.Name == "MegaSlime" then
                collectPickup("MegaSlime")
            elseif nearestMob.Name == "UltraRedSlime" then
                collectPickup("UltraRedSlime")
            end
        end

        -- Wait for a short period of time before checking for the nearest mob again
        wait(0.1)
    end
end

-- Toggle farming on or off
function toggleFarming()
    farmingEnabled = not farmingEnabled
    if farmingEnabled then
        print("Farming enabled")
        autoFarmSlimes()
    else
        print("Farming disabled")
    end
end

-- Start the auto farm loop
toggleFarming()
    -- The variable (Option) is a table of strings for the current selected options
    end,
 })
