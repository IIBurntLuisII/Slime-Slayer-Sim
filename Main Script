local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Slime Slaying Sim",
    LoadingTitle = "Burnt Hub",
    LoadingSubtitle = "By Damian",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "SaveFile"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Slime Slayer Sim Key",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"https://pastebin.com/dPxksJ8h"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })
 local teleportPosition = Vector3.new(-1058, 48, -11170) -- Position to teleport the player
 local platformSize = Vector3.new(10, 1, 10) -- Size of the platform under the player

 local MainTab = Window:CreateTab("Main", nil) -- Title, Image
 local AutoFarmTab = Window:CreateTab("Auto Farm", nil) -- Title, Image
 local PlayerTab = Window:CreateTab("Player", nil) -- Title, Image
 local MainSection = MainTab:CreateSection("Main")
 local MainSection = AutoFarmTab:CreateSection("Auto Farm Slimes")
 local MainSection = PlayerTab:CreateSection("Walk Speed")

 Rayfield:Notify({
    Title = "You executed the script",
    Content = "Very good script maker",
    Duration = 5,
    Image = nil,
    Actions = { -- Notification Buttons
       Ignore = {
          Name = "Okay!",
          Callback = function()
          print("The user tapped Okay!")
       end
    },
},
})


 local Button = MainTab:CreateButton({
    Name = "Auto Collect Shards",
    Callback = function()
        local args = {
            [1] = "Shard"
        }
        
        while true do
            game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("EnemyService"):WaitForChild("RF"):WaitForChild("CollectPickUp"):InvokeServer(unpack(args))
            wait(0.1) -- Wait for 0.1 seconds before collecting again
        end       
    end,
})

local Toggle = AutoFarmTab:CreateToggle({
    Name = "Auto Kraken Boss",
    CurrentValue = false,
    Flag = "Auto Boss Kraken On", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
   local teleportPosition = Vector3.new(-1058, 48, -11170) -- Position to teleport the player
   local platformSize = Vector3.new(10, 1, 10) -- Size of the platform under the player

   local function teleportAndCreatePlatform()
    local player = game.Players.LocalPlayer
    player.Character:MoveTo(teleportPosition) -- Teleport the player to the specified position
    
    -- Create a platform under the player
    local platform = Instance.new("Part")
    platform.Size = platformSize
    platform.Position = Vector3.new(teleportPosition.X, teleportPosition.Y - 5, teleportPosition.Z) -- Adjust the platform position
    platform.Anchored = true
    platform.CanCollide = true
    platform.Parent = game.Workspace
        -- The variable (Value) is a boolean on whether the toggle is true or false
    end
end
})
